#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#antuor:Alan

import copy
# 数字, 字符串
print('-----------------------------------数字---------------------------------')
a1 = 123           ###赋值
a2 = 123
print (id(a1))
print ('数字赋值:',id(a2))
print('-----------------------------------字符串---------------------------------')
a3 = 'asd'
a4 =a3
print (id(a3))
print ('字符串赋值:',id(a4))
print('-----------------------------------数字,字符串深浅拷贝---------------------------------')
a5 = 'alan'
a6 =copy.copy(a5)       ###浅拷贝
a7 =copy.deepcopy(a5)   ###深拷贝
print (id(a5))
print ('字符串浅拷贝:',id(a6))
print ('字符串深拷贝:',id(a7))

"""字符串和数字,对这三种方法,用的是同一个内存地址"""



print('-----------------------------------元祖,列表,字典---------------------------------')
print('---------------------字典-------------------------')
n1 = {'k1':'wu','k2':133,'k3':['alan',123]}
n2 =n1
print(id(n1))
print('字典赋值:',id(n2))
n3 = copy.copy(n1)     ###只拷贝第一层
n4 = copy.deepcopy(n1) ###深拷贝
print('字典浅拷贝:',id(n3))
print('字典深拷贝:',id(n4))
print('---------------------第1层-------------------------')
print(id(n1['k1']))
print('深浅拷贝第一层:',id(n3['k1']))
print('深浅拷贝第一层:',id(n4['k1']))

print('---------------------第2层-------------------------')
print(id(n1['k3'][1]))
print('浅拷贝第二层:',id(n3['k3'][1]))
print('深拷贝第二层:',id(n4['k3'][1]))

print('-----------------------------------浅拷贝应用---------------------------------')
dic = {
    "cpu":[80,],
    "mem":[80,],
    "disk":[80,]
}

print("原数据:",dic)
new_copy_dic = copy.copy(dic)
new_copy_dic['cpu'][0] = 50    ###因为新数据是对旧数据的浅拷贝,只拷贝父对象,不拷贝子对象,所以新子对象变影响旧,旧子对象影响新
print("浅拷贝后原数据:",dic)
print("浅拷贝数据:",new_copy_dic)

print('-----------------------------------深拷贝应用---------------------------------')
#################################应用: 深拷贝###########################
dic = {
    "cpu":[80,],
    "mem":[80,],
    "disk":[80,]
}
print("原数据:",dic)
new_deepcopy_dic = copy.deepcopy(dic)
new_deepcopy_dic['cpu'] = 90
print("深拷贝后原数据:",dic)
print("深拷贝数据:",new_deepcopy_dic)